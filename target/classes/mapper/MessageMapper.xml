<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.fct.nowcoder.dao.MessageMapper">

    <resultMap id="MessageType" type="message">
        <result column="from_id" property="fromId"/>
        <result column="to_id" property="toId"/>
        <result column="conversation_id" property="conversationId"/>
        <result column="create_time" property="createTime"/>
    </resultMap>

    <insert id="addMessage" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO message(from_id, to_id, conversation_id, content, status, create_time)
        VALUES (#{fromId}, #{toId}, #{conversationId}, #{content}, #{status}, #{createTime});
    </insert>

    <update id="updateMessageStatus">
        UPDATE message
        SET status = #{status}
        WHERE id IN
        <foreach collection="ids" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </update>


    <select id="selectConversation" resultMap="MessageType">
        SELECT * FROM message
        WHERE id in(
            SELECT MAX(id) 'id'
            FROM message
            WHERE status != 2
            AND from_id != 1
            AND (from_id = #{userId} OR to_id = #{userId} )
            GROUP BY conversation_id
        )
        ORDER BY id DESC
        LIMIT #{offset},#{limit};
    </select>

    <select id="selectConversationCount" resultType="java.lang.Integer">
        SELECT COUNT(m.id)
        FROM (
                 SELECT MAX(id) 'id'
                 FROM message
                 WHERE status != 2
                 AND from_id != 1
                 AND (from_id = #{userId} OR to_id = #{userId} )
                 GROUP BY conversation_id
             ) AS m;
    </select>

    <select id="selectLetterLetters" resultMap="MessageType">
        SELECT *
        FROM message
        WHERE conversation_id = #{conversationId}
        AND status != 2
        AND from_id != 1
        LIMIT #{offset},#{limit};
    </select>

    <select id="selectLetterCount" resultType="java.lang.Integer">
        SELECT COUNT(*)
        FROM message
        WHERE conversation_id = #{conversationId}
        AND status != 2
        AND from_id != 1;
    </select>


    <select id="selectLetterUnreadCount" resultType="java.lang.Integer">
        SELECT COUNT(id)
        FROM message
        WHERE status = 0
        AND from_id != 1
        AND to_id = #{userId}
        <if test="conversationId!= null">
           AND conversation_id = #{conversationId};
        </if>
    </select>

    <select id="selectMessage" resultMap="MessageType">
        SELECT *
        FROM message
        WHERE id in(
                SELECT MAX(id) 'id'
                FROM message
                WHERE status != 2
                AND to_id = #{userId}
                AND from_id = 1
                AND conversation_id = #{topic}
            );
    </select>

    <select id="selectNoticeCount" resultType="java.lang.Integer">
        SELECT COUNT(id)
        FROM message
        WHERE status != 2
        AND to_id = #{userId}
        AND from_id = 1
        AND conversation_id = #{topic}
    </select>

    <select id="selectNoticeUnreadCount" resultType="java.lang.Integer">
        SELECT COUNT(id)
        FROM message
        WHERE status = 0
        AND to_id = #{userId}
        AND from_id = 1
        <if test="topic!=null">
            AND conversation_id = #{topic};
        </if>
    </select>

    <select id="selectNotices" resultMap="MessageType">
        SELECT *
        FROM message
        WHERE status != 2
        AND to_id = #{userId}
        AND from_id = 1
        AND conversation_id = #{topic}
        ORDER BY create_time desc
        LIMIT #{offset}, #{limit}
    </select>


</mapper>